using System;
using System.Numerics;
using System.Globalization;

namespace ProjectEulerInC
{
	public class Problem25
	{
		public Problem25 ()
		{
		}
		public static int GetSolution()
		{
			BigInteger numberBelow = BigInteger.Parse(//"1" +
				"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
				"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
				"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
				"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
				"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
				"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
				"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
				"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
				"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000" +
				"0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
				,CultureInfo.InvariantCulture);
			//numberBelow = 10;
			int solution = 2;
			BigInteger currentNumber = 1;
			BigInteger prevNumber = 1;
			BigInteger nextNumber = 1;

			while (currentNumber <= numberBelow) {
				nextNumber = GetNextNumber (currentNumber, prevNumber);
				prevNumber = currentNumber;
				currentNumber = nextNumber;
				solution++;
			}
			return solution;
		}
		public static BigInteger GetNextNumber(BigInteger currentNumber, BigInteger previusNumber)
		{
			return currentNumber + previusNumber;
		}
	}
}

