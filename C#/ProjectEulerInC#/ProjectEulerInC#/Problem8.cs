using System;

namespace ProjectEulerInC
{
	public class Problem8
	{
		public Problem8 ()
		{
		}
		public static double GetSolution()
		{
			string str = "73167176531330624919225119674426574742355349194934\n\t\t\t\t96983520312774506326239578318016984801869478851843\n\t\t\t\t85861560789112949495459501737958331952853208805511\n\t\t\t\t12540698747158523863050715693290963295227443043557\n\t\t\t\t66896648950445244523161731856403098711121722383113\n\t\t\t\t62229893423380308135336276614282806444486645238749\n\t\t\t\t30358907296290491560440772390713810515859307960866\n\t\t\t\t70172427121883998797908792274921901699720888093776\n\t\t\t\t65727333001053367881220235421809751254540594752243\n\t\t\t\t52584907711670556013604839586446706324415722155397\n\t\t\t\t53697817977846174064955149290862569321978468622482\n\t\t\t\t83972241375657056057490261407972968652414535100474\n\t\t\t\t82166370484403199890008895243450658541227588666881\n\t\t\t\t16427171479924442928230863465674813919123162824586\n\t\t\t\t17866458359124566529476545682848912883142607690042\n\t\t\t\t24219022671055626321111109370544217506941658960408\n\t\t\t\t07198403850962455444362981230987879927244284909188\n\t\t\t\t84580156166097919133875499200524063689912560717606\n\t\t\t\t05886116467109405077541002256983155200055935729725\n\t\t\t\t71636269561882670428252483600823257530420752963450";
			var input = str.Split ('\n');
			str = string.Empty;
			for (int i = 0; i < input.Length; i++) {
				var subStr = input[i].Trim();
				str += subStr;
			}

			var numOfItems = 13;
			double currentProduct = 1;
			double maxProduct = 1;
			for (int i = 0; i < str.Length - numOfItems; i++) {
				for (int j = 0; j < numOfItems; j++) {
					var item = GetItem (str, i+j);
					currentProduct = currentProduct * item;

					if (j == numOfItems-1 && currentProduct > maxProduct)
						maxProduct = currentProduct;
				}
				currentProduct = 1;
			}

			return maxProduct;
		}
		private static int GetItem(string all, int position)
		{
			var item = all [position];
			var intItem = Convert.ToInt32 (char.GetNumericValue (item));
			return intItem;
		}
	}
}

